{"ast":null,"code":"import _asyncToGenerator from \"/mnt/e/Programmr/git/m152-m306/antonios-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./http.service\";\nexport class MenuService {\n  constructor(httpService) {\n    this.httpService = httpService;\n    this.API_URL = 'http://localhost:3000';\n  }\n\n  fetchMenuItems() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return new Promise((resolve, reject) => {\n        _this.httpService.get(`${_this.API_URL}/menu`).then(response => resolve(_this.mapToMenuItems(response))).catch(error => reject(error));\n      });\n    })();\n  }\n\n  mapToMenuItems(data) {\n    const menuItems = data.map(item => ({\n      name: item.itemName,\n      price: {\n        small: item.smallPrice,\n        large: item.largePrice\n      },\n      ingredients: item.ingredients.map(ingredient => ingredient.ingredientName).join(', ')\n    }));\n    return [];\n  }\n\n  getMostPopular() {\n    return new Promise((resolve, reject) => {\n      this.httpService.get(`${this.API_URL}/menu/bestsellers`).then(response => resolve(this.mapToMenuItems(response))).catch(error => reject(error));\n    });\n  }\n\n}\n\nMenuService.ɵfac = function MenuService_Factory(t) {\n  return new (t || MenuService)(i0.ɵɵinject(i1.HttpService));\n};\n\nMenuService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MenuService,\n  factory: MenuService.ɵfac\n});","map":{"version":3,"sources":["/mnt/e/Programmr/git/m152-m306/antonios-frontend/src/app/services/menu.service.ts"],"names":["i0","i1","MenuService","constructor","httpService","API_URL","fetchMenuItems","Promise","resolve","reject","get","then","response","mapToMenuItems","catch","error","data","menuItems","map","item","name","itemName","price","small","smallPrice","large","largePrice","ingredients","ingredient","ingredientName","join","getMostPopular","ɵfac","MenuService_Factory","t","ɵɵinject","HttpService","ɵprov","ɵɵdefineInjectable","token","factory"],"mappings":";AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,gBAApB;AACA,OAAO,MAAMC,WAAN,CAAkB;AACrBC,EAAAA,WAAW,CAACC,WAAD,EAAc;AACrB,SAAKA,WAAL,GAAmBA,WAAnB;AACA,SAAKC,OAAL,GAAe,uBAAf;AACH;;AACKC,EAAAA,cAAc,GAAG;AAAA;;AAAA;AACnB,aAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,QAAA,KAAI,CAACL,WAAL,CAAiBM,GAAjB,CAAsB,GAAE,KAAI,CAACL,OAAQ,OAArC,EACKM,IADL,CACUC,QAAQ,IAAIJ,OAAO,CAAC,KAAI,CAACK,cAAL,CAAoBD,QAApB,CAAD,CAD7B,EAEKE,KAFL,CAEWC,KAAK,IAAIN,MAAM,CAACM,KAAD,CAF1B;AAGH,OAJM,CAAP;AADmB;AAMtB;;AACDF,EAAAA,cAAc,CAACG,IAAD,EAAO;AACjB,UAAMC,SAAS,GAAGD,IAAI,CACjBE,GADa,CACRC,IAAD,KAAW;AAChBC,MAAAA,IAAI,EAAED,IAAI,CAACE,QADK;AAEhBC,MAAAA,KAAK,EAAE;AACHC,QAAAA,KAAK,EAAEJ,IAAI,CAACK,UADT;AAEHC,QAAAA,KAAK,EAAEN,IAAI,CAACO;AAFT,OAFS;AAMhBC,MAAAA,WAAW,EAAER,IAAI,CAACQ,WAAL,CAAiBT,GAAjB,CAAsBU,UAAD,IAAgBA,UAAU,CAACC,cAAhD,EAAgEC,IAAhE,CAAqE,IAArE;AANG,KAAX,CADS,CAAlB;AASA,WAAO,EAAP;AACH;;AACDC,EAAAA,cAAc,GAAG;AACb,WAAO,IAAIxB,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,WAAKL,WAAL,CAAiBM,GAAjB,CAAsB,GAAE,KAAKL,OAAQ,mBAArC,EACKM,IADL,CACUC,QAAQ,IAAIJ,OAAO,CAAC,KAAKK,cAAL,CAAoBD,QAApB,CAAD,CAD7B,EAEKE,KAFL,CAEWC,KAAK,IAAIN,MAAM,CAACM,KAAD,CAF1B;AAGH,KAJM,CAAP;AAKH;;AA9BoB;;AAgCzBb,WAAW,CAAC8B,IAAZ,GAAmB,SAASC,mBAAT,CAA6BC,CAA7B,EAAgC;AAAE,SAAO,KAAKA,CAAC,IAAIhC,WAAV,EAAuBF,EAAE,CAACmC,QAAH,CAAYlC,EAAE,CAACmC,WAAf,CAAvB,CAAP;AAA6D,CAAlH;;AACAlC,WAAW,CAACmC,KAAZ,GAAoB,aAAcrC,EAAE,CAACsC,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAErC,WAAT;AAAsBsC,EAAAA,OAAO,EAAEtC,WAAW,CAAC8B;AAA3C,CAAtB,CAAlC","sourcesContent":["import * as i0 from \"@angular/core\";\nimport * as i1 from \"./http.service\";\nexport class MenuService {\n    constructor(httpService) {\n        this.httpService = httpService;\n        this.API_URL = 'http://localhost:3000';\n    }\n    async fetchMenuItems() {\n        return new Promise((resolve, reject) => {\n            this.httpService.get(`${this.API_URL}/menu`)\n                .then(response => resolve(this.mapToMenuItems(response)))\n                .catch(error => reject(error));\n        });\n    }\n    mapToMenuItems(data) {\n        const menuItems = data\n            .map((item) => ({\n            name: item.itemName,\n            price: {\n                small: item.smallPrice,\n                large: item.largePrice\n            },\n            ingredients: item.ingredients.map((ingredient) => ingredient.ingredientName).join(', '),\n        }));\n        return [];\n    }\n    getMostPopular() {\n        return new Promise((resolve, reject) => {\n            this.httpService.get(`${this.API_URL}/menu/bestsellers`)\n                .then(response => resolve(this.mapToMenuItems(response)))\n                .catch(error => reject(error));\n        });\n    }\n}\nMenuService.ɵfac = function MenuService_Factory(t) { return new (t || MenuService)(i0.ɵɵinject(i1.HttpService)); };\nMenuService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: MenuService, factory: MenuService.ɵfac });\n"]},"metadata":{},"sourceType":"module"}